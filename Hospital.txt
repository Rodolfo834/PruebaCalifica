
package Aplicacion;


public class Principal {
    public static void main(String[] arg) {
        PresentacionI.View v1 = new PresentacionI.View();
        PresentacionI.Model m1 = new PresentacionI.Model();
        PresentacionI.Control c1 = new PresentacionI.Control(v1, m1);
        v1.setVisible(true);
		
	}
    
}


package Data;

import Logic.Doctor;
import Logic.Paciente;
import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;


public class Hospital {
    private static Hospital instance =null;
    private Map<String, Paciente> pacientes;
    private Map<String, Doctor> doctores;
    
    private Hospital(){
        pacientes = new HashMap<String, Paciente>();
        doctores = new HashMap<String, Doctor>();
    }
    
    public static Hospital getInstance(){
        if(instance == null){
            instance = new Hospital();
        }
        return instance;
    }
    public void addPaciente(Paciente x) throws Exception{
        Paciente p = pacientes.get(x.getCita());
        if(p == null){
            pacientes.put(x.getCita(), x); 
        }else{
            throw new Exception("Paciente ya existe");
        }
    }
    
     public void addDoctor(Doctor x) throws Exception{
        Doctor p = doctores.get(x.getClave());
        if(p == null){
            doctores.put(x.getClave(), x); 
        }else{
            throw new Exception("Doctor ya existe");
        }
    }
     
    public List<Paciente> getPacientes(){
        List<Paciente> li = new ArrayList<>();
        for (Map.Entry<String, Paciente> entry : pacientes.entrySet()) {
            li.add(entry.getValue());
        }
        return li;
    } 
    
     public List<Doctor> getDoctor(){
        List<Doctor> li = new ArrayList<>();
        for (Map.Entry<String, Doctor> entry : doctores.entrySet()) {
            li.add(entry.getValue());
        }
        return li;
    } 
     
     public List<Paciente> getPacientePorcita(String cit) throws Exception{
        List<Paciente> li = new ArrayList<>();
        Paciente p = pacientes.get(cit);
        if(p != null){
            li.add(p);
            return li;
        }else{
            throw new Exception("Paciente no existe");
        }
     }
     
     public List<Doctor> getDoctorPorclave(String clav) throws Exception{
        List<Doctor> li = new ArrayList<>();
        Doctor p = doctores.get(clav);
        if(p != null){
            li.add(p);
            return li;
        }else{
            throw new Exception("Doctor no existe");
        }
     }

    public void eliminar(Paciente p) {
        pacientes.remove(p.getCita());
    }

    public void editar(Paciente x) {
        Paciente p =pacientes.get(x.getCita());
        p.setNombre(x.getNombre());
        p.setFecha(x.getFecha());
        p.setMotivo(x.getMotivo());
    }
  
	
}


package Logic;


public class Doctor {
        private String id;
	private String nombre;
	private String especialidad;
	private String clave;
	private int rol;
	
	public Doctor(String id, String nombre, String especialidad, int rol, String clave) {
		this.id =id;
		this.nombre = nombre;
		this.especialidad = especialidad;
		this.rol = rol;
		this.clave = clave;
	}
	
	public Doctor() {
		
	}

	public String getIds() {
		return id;
	}

	public void setIds(String id) {
		this.id = id;
	}
	
	public String getNombre() {
		return nombre;
	}

	public void setNombre(String nombre) {
		this.nombre = nombre;
	}
	
	public String getEspecialidad() {
		return especialidad;
	}

	public void setEspecialidad(String especialidad) {
		this.especialidad = especialidad;
	}
	
	public String getClave() {
		return clave;
	}

	public void setClave(String clave) {
		this.clave = clave;
	}

	public int getRol() {
		return rol;
	}

	public void setRol(int rol) {
		this.rol = rol;
	}
	
}


package Logic;


public class Paciente {
    private String cita;
	private String nombre;
	private String fecha;
	private String hora;
	private String motivo;
	
	public Paciente(String cita, String nombre, String fecha, String hora) {
		this.cita = cita;
		this.nombre = nombre;
		this.fecha = fecha;
		this.hora = hora;
		this.motivo = motivo;
	}
	
	public Paciente() {
		
	}

	public String getCita() {
		return cita;
	}

	public void setCita(String cita) {
		this.cita = cita;
	}
	
	public String getNombre() {
		return nombre;
	}

	public void setNombre(String nombre) {
		this.nombre = nombre;
	}
	
	public String getFecha() {
		return fecha;
	}

	public void setFecha(String fecha) {
		this.fecha = fecha;
	}
	
	public String getHora() {
		return hora;
	}

	public void setHora(String hora) {
		this.hora = hora;
	}
	
	public String getMotivo() {
		return motivo;
	}

	public void setMotivo(String motivo) {
		this.motivo = motivo;
	}



    
}


package PresentacioL;


import java.net.PasswordAuthentication;
import java.util.Observable;
import java.util.Observer;
import javax.swing.JDesktopPane;
import javax.swing.JOptionPane;
import javax.swing.WindowConstants;


public class View extends javax.swing.JPanel implements Observer{
    private Control control;
    private Model model;
    
    public View() {
        initComponents();
    }

    public Control getControl() {
        return control;
    }

    public void setControl(Control control) {
        this.control = control;
    }

    public Model getModel() {
        return model;
    }

    public void setModel(Model model) {
        this.model = model;
        model.addObserver(this);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">                          
    private void initComponents() {

        LblUsuario = new javax.swing.JLabel();
        LblContraseñ = new javax.swing.JLabel();
        TxtUsuario = new javax.swing.JTextField();
        jPassword = new javax.swing.JPasswordField();
        Entrar = new javax.swing.JButton();

        LblUsuario.setText("Usuario:");

        LblContraseñ.setText("Contraseña:");

        TxtUsuario.setText("jTextField1");
        TxtUsuario.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                TxtUsuarioActionPerformed(evt);
            }
        });

        Entrar.setText("Entrar");
        Entrar.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                EntrarMouseClicked(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(63, 63, 63)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(Entrar)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(LblContraseñ)
                            .addComponent(LblUsuario))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(TxtUsuario, javax.swing.GroupLayout.DEFAULT_SIZE, 137, Short.MAX_VALUE)
                            .addComponent(jPassword))))
                .addContainerGap(125, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(82, 82, 82)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(LblUsuario)
                    .addComponent(TxtUsuario, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(34, 34, 34)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(LblContraseñ)
                    .addComponent(jPassword, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(30, 30, 30)
                .addComponent(Entrar)
                .addContainerGap(88, Short.MAX_VALUE))
        );
    }// </editor-fold>                        

    private void TxtUsuarioActionPerformed(java.awt.event.ActionEvent evt) {                                           
        // TODO add your handling code here:
    }                                          

    private void EntrarMouseClicked(java.awt.event.MouseEvent evt) {                                    
        String usuario = "Doctor1";
        String Contraseña = "1234";
        String Pass = new String(jPassword.getPassword());
        
        if (TxtUsuario.getText().equals(usuario)&& Pass.equals(Contraseña)){
           PresentacionI.View vi = new PresentacionI.View();
           vi.setVisible(true);
            disposee();
        } else {
        }   JOptionPane.showMessageDialog(this, "Usuario o Contraseña incorrecto");
    }                                   

    @Override
    public void update(Observable o, Object arg) {
        this.repaint();
    }


    // Variables declaration - do not modify                     
    private javax.swing.JButton Entrar;
    private javax.swing.JLabel LblContraseñ;
    private javax.swing.JLabel LblUsuario;
    private javax.swing.JTextField TxtUsuario;
    private javax.swing.JPasswordField jPassword;
    // End of variables declaration                   
}


package PresentacionI;

import Logic.Paciente;
import java.util.List;
import javax.swing.JOptionPane;


public class Control {

  
    
    private View view;
    private Model model;

    public Control(View view, Model model) {
        this.view = view;
        this.model = model;
        view.setControl(this);
        view.setModel(model);
    }

    public void agregar(boolean edita, String cit, String nom, String fech, String mot) {
        Paciente x = new Paciente(cit, nom, fech, mot);
        try {
            if(!edita){
                
                Data.Hospital.getInstance().addPaciente(x);
                List<Paciente> li = Data.Hospital.getInstance().getPacientes();
                model.setLis(li);
            }else{
                Data.Hospital.getInstance().editar(x);
                cargarTodo();
            }
        } catch (Exception e) {
            JOptionPane.showMessageDialog(null, e.getMessage());
        }
        model.setP(new Paciente());
        model.setEdita(false);
    }

    public void cancelar() {
        model.setP(new Paciente());
        
    }

    public void buscarPorCita(String str) {
        try {
            List<Paciente> li = Data.Hospital.getInstance().getPacientePorcita(str);
            model.setLis(li);
            
        } catch (Exception e) {
            JOptionPane.showMessageDialog(null, e.getMessage());
        }
        model.setP(new Paciente());
    }

    public void cargarTodo() {
         List<Paciente> li = Data.Hospital.getInstance().getPacientes();
            model.setLis(li);
    }

    public void eliminar(int n) {
        Paciente p = model.getRow(n);
        Data.Hospital.getInstance().eliminar(p);
        cargarTodo();
    }

    public void editar(int n) {
        Paciente p = model.getRow(n);
        model.setEdita(true);
        model.setP(p);
    }
 
}


package PresentacionI;

import Logic.Paciente;
import java.util.ArrayList;
import java.util.List;
import java.util.Observable;
import java.util.Observer;


public class Model extends Observable{
    private TableModel tabla;
    private int[] col ={0,1,2,3,4};
    private Paciente p;
    private List<Paciente> lis;
    private boolean edita;

    public Model() {
        p = new Paciente();
        lis = new ArrayList<>();
        tabla = new TableModel(lis, col);
        edita = false;
    }

    public boolean isEdita() {
        return edita;
    }

    public void setEdita(boolean edita) {
        this.edita = edita;
    }

    public Paciente getP() {
        return p;
    }

    public void setP(Paciente p) {
        this.p = p;
        refresh();
    }

    public List<Paciente> getLis() {
        return lis;
    }

    public void setLis(List<Paciente> lis) {
        this.lis = lis;
        setTabla(lis);
        refresh();
    }

    public TableModel getTabla() {
        return tabla;
    }

    public void setTabla(List<Paciente> l) {
        tabla = new TableModel(l, col);
    }
    
    @Override
    public void addObserver(Observer o){
        super.addObserver(o);
        refresh();
        
    }
    
    private void refresh(){
        setChanged();
        notifyObservers();
    }

    public Paciente getRow(int n) {
        return tabla.getRowAt(n);
    }

}


package PresentacionI;

import Logic.Paciente;
import java.util.List;
import javax.swing.table.AbstractTableModel;


public class TableModel extends AbstractTableModel{
    private List<Paciente> row;
    private int[] col;
    private String[] colsName = {"Cita", "Nombre", "Fecha", "Motivo"};

    public TableModel(List<Paciente> row, int[] col) {
        this.row = row;
        this.col = col;
    }

    @Override
    public int getRowCount() {
        return row.size();
    }

    @Override
    public int getColumnCount() {
        return col.length;
    }

    @Override
    public Object getValueAt(int i, int i1) {
        Paciente p = row.get(i);
        switch(i1){
            case 0: return p.getCita();
            case 1: return p.getNombre();
            case 2: return p.getFecha();
            case 3: return p.getMotivo();
            default: return "";
        }
    }

    @Override
    public String getColumnName(int i) {
        return colsName[i];
    }

    public Paciente getRowAt(int n) {
        return row.get(n);
    }
    
}

package PresentacionI;

import Logic.Paciente;
import java.text.ParseException;
import java.text.SimpleDateFormat;
import java.util.Date;
import java.util.Observable;
import java.util.Observer;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JOptionPane;


public class View extends javax.swing.JFrame implements Observer{

    private Control control;
    private Model model;
    
    public View() {
        initComponents();
        desHabilitar();
    }

    public Control getControl() {
        return control;
    }

    public void setControl(Control control) {
        this.control = control;
    }

    public Model getModel() {
        return model;
    }

    public void setModel(Model model) {
        this.model = model;
        model.addObserver(this);
    }

     @Override
    public void update(Observable o, Object o1) {
        Paciente p = model.getP();
        boolean e = model.isEdita();
        if(e){
            Habilitar();
            jTextCita.setEditable(false);
        }
        jTextCita.setText(p.getCita());
        jTextNombre.setText(p.getNombre());
        jTextBuscar.setText("");
        if(p.getFecha() !=null){
            try {
                Date j =new SimpleDateFormat("dd/MM/yyyy").parse(p.getFecha());
                jDateFecha.setDate(j);
            } catch (ParseException ex) {
                Logger.getLogger(View.class.getName()).log(Level.SEVERE, null, ex);
            }
        }else{
            jDateFecha.setDate(new Date());
        }
        
        jTextMotivo.setText(p.getMotivo());
        Tabla1.setModel(model.getTabla());
    }
       private void Habilitar() {
        jTextCita.setEnabled(true);
        jTextNombre.setEnabled(true);
        jDateFecha.setEnabled(true);
        jTextMotivo.setEnabled(true);
        }
       private void desHabilitar() {
        jTextCita.setEnabled(false);
        jTextNombre.setEnabled(false);
        jDateFecha.setEnabled(false);
        jTextMotivo.setEnabled(false);
        
       }
       j
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">                          
    private void initComponents() {

        demoBundle1 = new datechooser.demo.locale.DemoBundle();
        startDemo1 = new datechooser.demo.StartDemo();
        jCalendar1 = new com.toedter.calendar.JCalendar();
        jPanel1 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        jTextCita = new javax.swing.JTextField();
        jLabel2 = new javax.swing.JLabel();
        jTextNombre = new javax.swing.JTextField();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jDateFecha = new com.toedter.calendar.JDateChooser();
        jScrollPane1 = new javax.swing.JScrollPane();
        jTextMotivo = new javax.swing.JTextArea();
        jButton1 = new javax.swing.JButton();
        jButton2 = new javax.swing.JButton();
        jButton3 = new javax.swing.JButton();
        jPanel2 = new javax.swing.JPanel();
        jTextBuscar = new javax.swing.JTextField();
        jScrollPane2 = new javax.swing.JScrollPane();
        Tabla1 = new javax.swing.JTable();
        jButton4 = new javax.swing.JButton();
        jButton5 = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jPanel1.setBackground(new java.awt.Color(0, 204, 204));
        jPanel1.setBorder(javax.swing.BorderFactory.createTitledBorder(javax.swing.BorderFactory.createTitledBorder(new javax.swing.border.MatteBorder(null), "Paciente", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Segoe UI", 0, 12), new java.awt.Color(204, 0, 204)), "Paciente", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Segoe UI", 1, 12), new java.awt.Color(255, 255, 255))); // NOI18N
        jPanel1.setForeground(new java.awt.Color(51, 51, 255));
        jPanel1.setToolTipText("Paciente"); // NOI18N

        jLabel1.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        jLabel1.setText("Cita");

        jLabel2.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        jLabel2.setText("Nombre");

        jLabel3.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        jLabel3.setText("Fecha");

        jLabel4.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        jLabel4.setText("Motivo");

        jTextMotivo.setColumns(20);
        jTextMotivo.setRows(5);
        jScrollPane1.setViewportView(jTextMotivo);

        jButton1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Iconos/diskette_save_saveas_1514.png"))); // NOI18N
        jButton1.setText("Guardar");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        jButton2.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Iconos/loginmanager_10029.png"))); // NOI18N
        jButton2.setText("Nuevo");
        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton2ActionPerformed(evt);
            }
        });

        jButton3.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Iconos/Cancel_icon-icons.com_73703.png"))); // NOI18N
        jButton3.setText("Cancelar");
        jButton3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton3ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel3)
                    .addComponent(jLabel4)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addContainerGap()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addComponent(jLabel1)
                                .addGap(71, 71, 71)
                                .addComponent(jTextCita, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addComponent(jLabel2)
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(jPanel1Layout.createSequentialGroup()
                                        .addGap(28, 28, 28)
                                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                            .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 267, javax.swing.GroupLayout.PREFERRED_SIZE)
                                            .addComponent(jTextNombre, javax.swing.GroupLayout.PREFERRED_SIZE, 258, javax.swing.GroupLayout.PREFERRED_SIZE)
                                            .addComponent(jDateFecha, javax.swing.GroupLayout.PREFERRED_SIZE, 140, javax.swing.GroupLayout.PREFERRED_SIZE)))
                                    .addGroup(jPanel1Layout.createSequentialGroup()
                                        .addGap(128, 128, 128)
                                        .addComponent(jButton2, javax.swing.GroupLayout.PREFERRED_SIZE, 112, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addGap(33, 33, 33)
                                        .addComponent(jButton3))))
                            .addComponent(jButton1))))
                .addContainerGap(34, Short.MAX_VALUE))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(55, 55, 55)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel1)
                    .addComponent(jTextCita, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel2)
                    .addComponent(jTextNombre, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel3)
                    .addComponent(jDateFecha, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(27, 27, 27)
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(0, 96, Short.MAX_VALUE))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(18, 18, 18)
                        .addComponent(jLabel4)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jButton1)
                            .addComponent(jButton2)
                            .addComponent(jButton3))
                        .addContainerGap())))
        );

        jPanel2.setBackground(new java.awt.Color(0, 102, 255));
        jPanel2.setBorder(javax.swing.BorderFactory.createTitledBorder(new javax.swing.border.SoftBevelBorder(javax.swing.border.BevelBorder.RAISED), "Lista de pacientes", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Segoe UI", 1, 12), new java.awt.Color(51, 255, 255))); // NOI18N

        Tabla1.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        Tabla1.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                Tabla1MouseClicked(evt);
            }
        });
        jScrollPane2.setViewportView(Tabla1);

        jButton4.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Iconos/xmag_search_find_export_locate_5984.png"))); // NOI18N
        jButton4.setText("Buscar");
        jButton4.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton4ActionPerformed(evt);
            }
        });

        jButton5.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Iconos/iconfinder-trash-4341321_120557.png"))); // NOI18N
        jButton5.setText("Eliminar");
        jButton5.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton5ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addComponent(jScrollPane2)
                        .addContainerGap())
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addComponent(jTextBuscar, javax.swing.GroupLayout.PREFERRED_SIZE, 206, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(44, 44, 44)
                        .addComponent(jButton4)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(jButton5)
                        .addGap(28, 28, 28))))
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGap(18, 18, 18)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jTextBuscar, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jButton4)
                    .addComponent(jButton5))
                .addGap(44, 44, 44)
                .addComponent(jScrollPane2, javax.swing.GroupLayout.DEFAULT_SIZE, 240, Short.MAX_VALUE)
                .addContainerGap())
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(27, 27, 27)
                .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap(66, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap())
        );

        pack();
    }// </editor-fold>                        

     private boolean valida(String cit, String nom, String mot) {
        if(cit.isEmpty()){
            JOptionPane.showMessageDialog(null, "Ingresa Cita");
            return false;
        }
        if(nom.isEmpty()){
            JOptionPane.showMessageDialog(null, "Ingresa Nombre");
            return false;
        }
        if(mot.isEmpty()){
            JOptionPane.showMessageDialog(null, "Ingresa Motivo");
            return false;
        }
       
        return true;
    }
     
    
    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {                                         
        String cit = jTextCita.getText();
        String nom = jTextNombre.getText();
        String fech = new SimpleDateFormat ("dd/MM/yyyy").format(jDateFecha.getDate());
        String mot = jTextMotivo.getText();
        if(valida(cit, nom, mot)){
            control.agregar(model.isEdita(),cit,nom, fech, mot);
        }
        desHabilitar();
    }                                        

    private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {                                         
        control.cancelar();
        Habilitar();
    }                                        

    private void jButton3ActionPerformed(java.awt.event.ActionEvent evt) {                                         
         control.cancelar();
         desHabilitar();
    }                                        

    private void jButton4ActionPerformed(java.awt.event.ActionEvent evt) {                                         
        String str = jTextBuscar.getText();
        if(!str.isEmpty()){
            control.buscarPorCita(str);
        }else{
            control.cargarTodo();
        }
    }                                        

    private void jButton5ActionPerformed(java.awt.event.ActionEvent evt) {                                         
       int n = Tabla1.getSelectedRow();
       if(n > -1){
           control.eliminar(n);
       }else{
           JOptionPane.showMessageDialog(null, "Seleccione un registro");
       }
    }                                        

    private void Tabla1MouseClicked(java.awt.event.MouseEvent evt) {                                    
        if (evt.getClickCount() == 2){
            int n = Tabla1.getSelectedRow();
            control.editar(n);
        }
    }                                   

  
    
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(View.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(View.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(View.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(View.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(() -> {
            new View().setVisible(true);
        });
    }

 

    // Variables declaration - do not modify                     
    private javax.swing.JTable Tabla1;
    private datechooser.demo.locale.DemoBundle demoBundle1;
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton2;
    private javax.swing.JButton jButton3;
    private javax.swing.JButton jButton4;
    private javax.swing.JButton jButton5;
    private com.toedter.calendar.JCalendar jCalendar1;
    private com.toedter.calendar.JDateChooser jDateFecha;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JTextField jTextBuscar;
    private javax.swing.JTextField jTextCita;
    private javax.swing.JTextArea jTextMotivo;
    private javax.swing.JTextField jTextNombre;
    private datechooser.demo.StartDemo startDemo1;
    // End of variables declaration                   

 

   
}




